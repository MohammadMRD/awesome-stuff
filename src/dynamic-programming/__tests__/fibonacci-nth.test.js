import { fibonacciNth, fibonacciNthWithMemo } from '../fibonacci-nth'

describe('FibonacciNth', () => {
  it('should calculate fibonacci correctly without memoization', () => {
    expect(fibonacciNth(1)).toBe(1)
    expect(fibonacciNth(2)).toBe(1)
    expect(fibonacciNth(3)).toBe(2)
    expect(fibonacciNth(4)).toBe(3)
    expect(fibonacciNth(5)).toBe(5)
    expect(fibonacciNth(6)).toBe(8)
    expect(fibonacciNth(7)).toBe(13)
    expect(fibonacciNth(8)).toBe(21)
    expect(fibonacciNth(20)).toBe(6765)
    expect(fibonacciNth(30)).toBe(832040)

    // Below codes takes too long :)
    // expect(fibonacciNth(50)).toBe(12586269025)
    // expect(fibonacciNth(70)).toBe(190392490709135)
    // expect(fibonacciNth(71)).toBe(308061521170129)
    // expect(fibonacciNth(72)).toBe(498454011879264)
    // expect(fibonacciNth(73)).toBe(806515533049393)
    // expect(fibonacciNth(74)).toBe(1304969544928657)
    // expect(fibonacciNth(75)).toBe(2111485077978050)
    // expect(fibonacciNth(80)).toBe(23416728348467685)
    // expect(fibonacciNth(90)).toBe(2880067194370816120)
  })

  it('should calculate fibonacci correctly with memoization', () => {
    expect(fibonacciNthWithMemo(1)).toBe(1n)
    expect(fibonacciNthWithMemo(2)).toBe(1n)
    expect(fibonacciNthWithMemo(3)).toBe(2n)
    expect(fibonacciNthWithMemo(4)).toBe(3n)
    expect(fibonacciNthWithMemo(5)).toBe(5n)
    expect(fibonacciNthWithMemo(6)).toBe(8n)
    expect(fibonacciNthWithMemo(7)).toBe(13n)
    expect(fibonacciNthWithMemo(8)).toBe(21n)
    expect(fibonacciNthWithMemo(20)).toBe(6765n)
    expect(fibonacciNthWithMemo(30)).toBe(832040n)
    expect(fibonacciNthWithMemo(50)).toBe(12586269025n)
    expect(fibonacciNthWithMemo(70)).toBe(190392490709135n)
    expect(fibonacciNthWithMemo(71)).toBe(308061521170129n)
    expect(fibonacciNthWithMemo(72)).toBe(498454011879264n)
    expect(fibonacciNthWithMemo(73)).toBe(806515533049393n)
    expect(fibonacciNthWithMemo(74)).toBe(1304969544928657n)
    expect(fibonacciNthWithMemo(75)).toBe(2111485077978050n)
    expect(fibonacciNthWithMemo(80)).toBe(23416728348467685n)
    expect(fibonacciNthWithMemo(90)).toBe(2880067194370816120n)
  })
})
